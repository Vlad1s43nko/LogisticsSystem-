name: Build Cross-Platform Desktop Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            output_name: LogisticsSystem.exe
            artifact_name: LogisticsSystem-Windows
          - os: macos-latest  
            output_name: LogisticsSystem.app
            artifact_name: LogisticsSystem-macOS
          - os: ubuntu-latest
            output_name: LogisticsSystem
            artifact_name: LogisticsSystem-Linux
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install platform build tools (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools" --yes
      continue-on-error: true
    
    - name: Install platform build tools (macOS)
      if: runner.os == 'macOS'
      run: |
        sudo xcode-select --install || true
      continue-on-error: true
    
    - name: Install platform build tools (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka pywebview flask
    
    - name: Build executable
      run: |
        python app.py build
    
    - name: Verify build output
      run: |
        echo "Contents of dist folder:"
        if [ "$RUNNER_OS" == "Windows" ]; then
          dir dist\
        else
          ls -la dist/
        fi
        echo "Looking for: ${{ matrix.output_name }}"
      shell: bash
    
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.output_name }}
        retention-days: 90
    
    - name: Upload to release (if tagged)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/${{ matrix.output_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}